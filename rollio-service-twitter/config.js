// ENV
require('dotenv').config();

const {
  NODE_ENV,
  PORT,
  TWITTER_CONSUMER_KEY,
  TWITTER_CONSUMER_SECRET,
  TWITTER_ACCESS_TOKEN,
  TWITTER_ACCESS_SECRET,
  GOOGLE_MAPS_API_KEY,
  GOOGLE_PLACES_API_KEY,
  NLP_API,
  AWS_SQS_REQUEST_VENDORS,
  AWS_SQS_TWITTER_IDS,
  AWS_SQS_PARSED_TWEETS,
} = process.env;

let RABBITMQ_CONNECT;
let AWS_ENV = false;

switch (NODE_ENV) {
  case 'PRODUCTION':
    RABBITMQ_CONNECT = process.env.RABBITMQ_SERVER_ID_PROD;
    AWS_ENV = true;
    break;
  case 'DEVELOPMENT_LOCAL':
    RABBITMQ_CONNECT = process.env.RABBITMQ_SERVER_ID_LOCAL;
    break;
  case 'TEST_LOCAL':
    RABBITMQ_CONNECT = process.env.RABBITMQ_SERVER_ID_LOCAL;
    break;
  case 'DEVELOPMENT_DOCKER':
    RABBITMQ_CONNECT = process.env.RABBITMQ_SERVER_ID_DOCKER;
    AWS_ENV = true;
    break;
  case 'TEST_DOCKER':
    RABBITMQ_CONNECT = process.env.RABBITMQ_SERVER_ID_DOCKER;
    AWS_ENV = true;
    break;
  default:
}

module.exports = {
  NODE_ENV,
  PORT,
  TWITTER_CONSUMER_KEY,
  TWITTER_CONSUMER_SECRET,
  TWITTER_ACCESS_TOKEN,
  TWITTER_ACCESS_SECRET,
  GOOGLE_MAPS_API_KEY,
  GOOGLE_PLACES_API_KEY,
  RABBITMQ_CONNECT,
  NLP_API,
  AWS_ENV,
  AWS_SQS_TWITTER_IDS,
  AWS_SQS_PARSED_TWEETS,
};
